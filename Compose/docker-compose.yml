version: "3.5"

networks:
  # Network for api gateway
  network-gateway:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.2.0/24
  # Network for microservices
  network-microservice:
    #internal: true
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.4.0/24

services:
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: db
    restart: on-failure
    environment:
      - "ACCEPT_EULA=Y"
      - "SA_PASSWORD=pass123!"
    ports:
      - "1533:1433"
    networks:
      - network-microservice

  mongo:
    image: mongo
    container_name: mongo
    restart: on-failure
    ports:
      - "28017:27017"
    networks:
      - network-microservice

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    container_name: elasticsearch
    restart: on-failure
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - network-microservice

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.2
    container_name: kibana
    restart: on-failure
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - network-microservice

  apm:
    image: docker.elastic.co/apm/apm-server:7.13.2
    container_name: apm
    restart: on-failure
    ports:
      - "8200:8200"
    depends_on:
      - kibana
    networks:
      - network-microservice

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: on-failure
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - network-microservice

  consul:
    image: consul
    container_name: consul
    restart: on-failure
    volumes:
      - consul-data:/consul/config
    ports:
      - "8500:8500"
    networks:
      - network-microservice

  users_service:
    build:
      context: ../
      dockerfile: Src/UsersService/Dockerfile
    container_name: users_service
    restart: unless-stopped
    networks:
      - network-microservice
    links:
      - rabbitmq
      - db
      - mongo
      - consul
    depends_on:
      - rabbitmq
      - db
      - mongo
      - consul

  movies_service:
    build:
      context: ../
      dockerfile: Src/MoviesService/Dockerfile
    container_name: movies_service
    restart: unless-stopped
    networks:
      - network-microservice
    links:
      - rabbitmq
      - db
      - mongo
      - consul
    depends_on:
      - rabbitmq
      - db
      - mongo
      - consul

  reviews_service:
    build:
      context: ../
      dockerfile: Src/ReviewsService/Dockerfile
    container_name: reviews_service
    restart: unless-stopped
    networks:
      - network-microservice
    links:
      - rabbitmq
      - db
      - mongo
      - consul
    depends_on:
      - rabbitmq
      - db
      - mongo
      - consul

  api:
    build: ../ApiGateway/Ocelot
    container_name: api
    restart: unless-stopped
    ports:
      - "8080:80"
    networks:
      - network-gateway
      - network-microservice
    links:
      - users_service
      - movies_service
      - reviews_service
      - consul
    depends_on:
      - consul

volumes:
  elasticsearch-data:
  consul-data:
